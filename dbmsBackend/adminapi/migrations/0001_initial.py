# Generated by Django 5.1.3 on 2024-12-01 18:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "resource_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("resource_name", models.CharField(max_length=255)),
                ("availability_status", models.BooleanField(default=True)),
                ("quantity_required", models.IntegerField()),
            ],
            options={
                "db_table": "resource",
            },
        ),
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "building_id",
                    models.CharField(max_length=4, primary_key=True, serialize=False),
                ),
                ("department_name", models.CharField(max_length=255)),
                ("no_of_floors", models.IntegerField()),
                ("no_of_rooms", models.IntegerField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "working_day",
                    models.CharField(
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "building",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                ("feedback_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_comment", models.TextField()),
                ("resource_issued", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "feedback",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "payment_id",
                    models.CharField(max_length=6, primary_key=True, serialize=False),
                ),
                ("amount", models.IntegerField()),
                ("payment_date", models.DateField()),
                ("payment_method", models.TextField()),
            ],
            options={
                "db_table": "payment",
            },
        ),
        migrations.CreateModel(
            name="UserRoomBooking",
            fields=[
                (
                    "user_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("username", models.CharField(max_length=100, unique=True)),
                ("password", models.CharField(max_length=100)),
                ("firstname", models.CharField(max_length=100)),
                ("lastname", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=150, unique=True)),
                ("phone_no", models.CharField(max_length=10)),
                ("address_street_no", models.IntegerField()),
                ("address_street_name", models.CharField(max_length=255)),
                ("address_city", models.CharField(max_length=100)),
                ("address_state", models.CharField(max_length=100)),
                ("address_country", models.CharField(max_length=100)),
                ("penalty_received", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "user_roombooking",
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "resource",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="book",
                        serialize=False,
                        to="adminapi.resource",
                    ),
                ),
                ("author", models.CharField(blank=True, max_length=255, null=True)),
                ("publisher", models.CharField(blank=True, max_length=255, null=True)),
                ("publication_year", models.IntegerField(blank=True, null=True)),
                ("edition", models.IntegerField(blank=True, null=True)),
                ("genre", models.CharField(blank=True, max_length=100, null=True)),
                ("language", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "book",
            },
        ),
        migrations.CreateModel(
            name="Hardware",
            fields=[
                (
                    "resource",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="hardware",
                        serialize=False,
                        to="adminapi.resource",
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "device_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "model_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "device_condition",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("warranty_status", models.BooleanField(blank=True, null=True)),
                ("date_purchased", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "hardware",
            },
        ),
        migrations.CreateModel(
            name="ResourceFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_feedbacks",
                        to="adminapi.feedback",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_feedbacks",
                        to="adminapi.resource",
                    ),
                ),
            ],
            options={
                "db_table": "resource_feedback",
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "room_id",
                    models.CharField(max_length=4, primary_key=True, serialize=False),
                ),
                ("room_no", models.IntegerField()),
                ("capacity", models.IntegerField()),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("Study Room", "Study Room"),
                            ("Meeting Room", "Meeting Room"),
                            ("Computer Lab", "Computer Lab"),
                        ],
                        max_length=20,
                    ),
                ),
                ("availability_status", models.BooleanField(default=True)),
                (
                    "building",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rooms",
                        to="adminapi.building",
                    ),
                ),
            ],
            options={
                "db_table": "room",
            },
        ),
        migrations.CreateModel(
            name="FeedbackRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_rooms",
                        to="adminapi.feedback",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_rooms",
                        to="adminapi.room",
                    ),
                ),
            ],
            options={
                "db_table": "feedback_room",
            },
        ),
        migrations.CreateModel(
            name="RoomSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=10,
                    ),
                ),
                ("open_time", models.TimeField()),
                ("close_time", models.TimeField()),
                (
                    "room",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedules",
                        to="adminapi.room",
                    ),
                ),
            ],
            options={
                "db_table": "room_schedule",
            },
        ),
        migrations.CreateModel(
            name="RoomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("reservation_date", models.DateField()),
                ("reservation_status", models.BooleanField(default=True)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_users",
                        to="adminapi.room",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="room_users",
                        to="adminapi.userroombooking",
                    ),
                ),
            ],
            options={
                "db_table": "room_user",
            },
        ),
        migrations.AddField(
            model_name="feedback",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="feedbacks",
                to="adminapi.userroombooking",
            ),
        ),
    ]
